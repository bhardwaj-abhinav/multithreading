/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
public class Main
{
	public static void main(String[] args) {
	    Paper paper = new Paper();
	    Pen pen = new Pen();
		Task1 t1 = new Task1(paper, pen);
		Task2 t2 = new Task2(paper,pen);
		
		Thread th1 = new Thread(t1, "Thread 1");
		Thread th2 = new Thread(t2, "Thread 2");
		
		th1.start();
		th2.start();
	}
}

class Pen{
    public synchronized void writeWithPaperAndPen(Paper paper){
        System.out.println(Thread.currentThread().getName() + " is using pen " + this + " trying to acquire lock of paper");
        paper.finishWriting();
    }
    
    public synchronized void finishWriting(){
        System.out.println(Thread.currentThread().getName() + " completed writing by using " + this);
    }
}  
class Paper{
    public synchronized void writeWithPenAndPaper(Pen pen){
        System.out.println(Thread.currentThread().getName() + " is using pen " + this + " trying to acquire lock of paper");
        pen.finishWriting();
    }
    
    public synchronized void finishWriting(){
        System.out.println(Thread.currentThread().getName() + " completed writing by using " + this);
    }
}

class Task1 implements Runnable{
    private Paper paper;
    private Pen pen;
    public Task1(Paper paper, Pen pen){
        this.paper = paper;
        this.pen = pen;
    }
    public void run(){
        paper.writeWithPenAndPaper(pen);
    }
}

class Task2 implements Runnable{
    private Paper paper;
    private Pen pen;
    public Task2(Paper paper, Pen pen){
        this.paper = paper;
        this.pen = pen;
    }
    public void run(){
        pen.writeWithPaperAndPen(paper);
    }
}
